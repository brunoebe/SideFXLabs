MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPfallbacks"
Content-Type: application/external-reference

.OPfallbacks

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPdummydefs"
Content-Type: application/external-reference

.OPdummydefs

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="node_type"
Content-Type: text/plain

Sop

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.init"
Content-Type: text/plain

type = labs::av_photogrammetry::4.0
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 2.50405 -0.13358
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
1 "output2"
2 "output3"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author prisms@threadripper1
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_texturing1.init"
Content-Type: text/plain

type = labs::av_texturing::4.0
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_texturing1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -2.72755 -0.7824
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	color1 1 1 "input1"
}
inputs
{
0 	color1 0 1
}
stat
{
  create -1
  modify -1
  author prisms@threadripper1
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_texturing1.chn"
Content-Type: text/plain

{
    channel reload {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../reload3\") }
    }
    channel manual_mode {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../manual_mode\") }
    }
    channel bExportLog {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../bExportLog\") }
    }
    channel side {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 8192 8192 expr = ch(\"../side\") }
    }
    channel down {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../down2\") }
    }
    channel file {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = chs(\"../file\") }
    }
    channel unwrap {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = chs(\"../unwrap\") }
    }
    channel holes {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../holes\") }
    }
    channel flipN {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../flipN\") }
    }
    channel useUDIM {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../useUDIM\") }
    }
    channel pad {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 15 15 expr = ch(\"../pad\") }
    }
    channel score {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../score\") }
    }
    channel angle {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 90 90 expr = ch(\"../angle2\") }
    }
    channel force {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../force\") }
    }
    channel visRemap {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = chs(\"../visRemap\") }
    }
    channel bCustomImages {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../bCustomImages\") }
    }
    channel customTextureImages {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = chs(\"../customTextureImages\") }
    }
    channel correctEV {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../correctEV\") }
    }
    channel useScore {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../useScore\") }
    }
    channel processColorspace {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = chs(\"../processColorspace\") }
    }
    channel multiBandDownscale {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../multiBandDownscale\") }
    }
    channel enablecustomenv {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../enablecustomenv\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_texturing1.parm"
Content-Type: text/plain

{
version 0.8
cook	[ 0	locks=0 ]	(	0	)
reload	[ 0	locks=0 ]	(	[ reload	0 ] 	)
manual_mode	[ 0	locks=0	autoscope=0 ]	(	[ manual_mode	1 ] 	)
bExportLog	[ 0	locks=0	autoscope=0 ]	(	[ bExportLog	0 ] 	)
folder0	[ 0	locks=0 ]	(	0	)
side	[ 0	locks=0	autoscope=0 ]	(	[ side	8192 ] 	)
down	[ 0	locks=0	autoscope=0 ]	(	[ down	1 ] 	)
file	[ 0	locks=0	autoscope=0 ]	(	[ file	png ] 	)
unwrap	[ 0	locks=0	autoscope=0 ]	(	[ unwrap	Basic ] 	)
useUDIM	[ 0	locks=0	autoscope=0 ]	(	[ useUDIM	1 ] 	)
holes	[ 0	locks=0	autoscope=0 ]	(	[ holes	1 ] 	)
correctEV	[ 0	locks=0	autoscope=0 ]	(	[ correctEV	0 ] 	)
folder1	[ 0	locks=0	autoscope=0 ]	(	1	)
pad	[ 0	locks=0	autoscope=0 ]	(	[ pad	15 ] 	)
multiBandDownscale	[ 0	locks=0	autoscope=0 ]	(	[ multiBandDownscale	4 ] 	)
useScore	[ 0	locks=0	autoscope=0 ]	(	[ useScore	1 ] 	)
score	[ 0	locks=0	autoscope=0 ]	(	[ score	0 ] 	)
angle	[ 0	locks=0	autoscope=0 ]	(	[ angle	90 ] 	)
processColorspace	[ 0	locks=0	autoscope=0 ]	(	[ processColorspace	sRGB ] 	)
force	[ 0	locks=0	autoscope=0 ]	(	[ force	0 ] 	)
flipN	[ 0	locks=0	autoscope=0 ]	(	[ flipN	0 ] 	)
visRemap	[ 0	locks=0	autoscope=0 ]	(	[ visRemap	PullPush ] 	)
subdivisionTargetRatio	[ 0	locks=0 ]	(	0.80000000000000004	)
bCustomImages	[ 0	locks=0	autoscope=0 ]	(	[ bCustomImages	0 ] 	)
customTextureImages	[ 0	locks=0	autoscope=0 ]	(	[ customTextureImages	"" ] 	)
folder2	[ 0	locks=0 ]	(	1	)
enablecustomenv	[ 8	locks=0 ]	(	[ enablecustomenv	1 ] 	)
customenv	[ 0	locks=0 ]	(	`chs(\"../customenv\")`	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_texturing1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	},
	"___toolcount___":{
		"type":"string",
		"value":"15"
	},
	"___toolid___":{
		"type":"string",
		"value":"object_spotlight"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_texturing1/mesh_materials.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.24865 -2.00148
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	mesh_geo 1 1 "input1"
}
inputs
{
0 	mesh_geo 0 1
}
stat
{
  create -1
  modify -1
  author Paul_Ambrosiussen@DESKTOP-A0373M3
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_texturing1/mesh_materials.parm"
Content-Type: text/plain

{
version 0.8
mMaterialEntries	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_texturing1/mesh_materials.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	},
	"___toolcount___":{
		"type":"string",
		"value":"2"
	},
	"___toolid___":{
		"type":"string",
		"value":"gamedev::sop_sop_quickmaterial"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_texturing1/mesh_materials/matnet.def"
Content-Type: text/plain

comment ""
position -3.92559 4.96514
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author paula@DESKTOP-5213MPP
  access 0777
}
color UT_Color RGB 0.3 0.5 0.65 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_texturing1/mesh_materials/matnet.parm"
Content-Type: text/plain

{
version 0.8
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_texturing1/mesh_materials/matnet.netbox"
Content-Type: text/plain

__netbox2

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_texturing1/mesh_materials/matnet.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_structure_from_motion1.init"
Content-Type: text/plain

type = labs::av_structure_from_motion::4.0
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_structure_from_motion1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0 3.2176
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
0 "output1"
1 "output2"
}
inputsNamed3
{
2 	av_analyze_images1 0 1 "input1"
}
inputs
{
0 	av_analyze_images1 0 1
}
stat
{
  create -1
  modify -1
  author prisms@threadripper1
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_structure_from_motion1.chn"
Content-Type: text/plain

{
    channel manual_mode {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../manual_mode\") }
    }
    channel bExportLog {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../bExportLog\") }
    }
    channel dsc_type {
      lefttype = extend
      righttype = extend
      defaultString = \"sift\"
      flags = 0
      segment { length = 0 expr = chs(\"../dsc_type3\") }
    }
    channel lock {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../lock\") }
    }
    channel local {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../local\") }
    }
    channel maxN {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../maxN\") }
    }
    channel minNumberOfMatches {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../minNumberOfMatches\") }
    }
    channel minInput {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../minInput\") }
    }
    channel lockAllIntrinsics {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../lockAllIntrinsics\") }
    }
    channel filterTrackForks {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../filterTrackForks\") }
    }
    channel locl_es {
      lefttype = extend
      righttype = extend
      defaultString = \"acransac\"
      flags = 0
      segment { length = 0 expr = chs(\"../locl_es\") }
    }
    channel localizerEstimatorMaxIterations {
      lefttype = extend
      righttype = extend
      default = 4096
      flags = 0
      segment { length = 0 value = 4096 4096 expr = ch(\"../localizerEstimatorMaxIterations\") }
    }
    channel localizerEstimatorError {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../localizerEstimatorError\") }
    }
    channel ba {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ba\") }
    }
    channel minTri {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../minTri\") }
    }
    channel minAngle {
      lefttype = extend
      righttype = extend
      default = 3
      flags = 0
      segment { length = 0 value = 3 3 expr = ch(\"../minAngle\") }
    }
    channel minLandmark {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../minLandmark\") }
    }
    channel maxReprEr {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../maxReprEr\") }
    }
    channel maxAngInit {
      lefttype = extend
      righttype = extend
      default = 40
      flags = 0
      segment { length = 0 value = 40 40 expr = ch(\"../maxAngInit\") }
    }
    channel minAngInit {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../minAngInit\") }
    }
    channel useInputMatches {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../useInputMatches\") }
    }
    channel useRigConstraint {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../useRigConstraint\") }
    }
    channel fileExt {
      lefttype = extend
      righttype = extend
      defaultString = \".abc\"
      flags = 0
      segment { length = 0 expr = chs(\"../fileExt\") }
    }
    channel outputFileType {
      lefttype = extend
      righttype = extend
      defaultString = \"exr\"
      flags = 0
      segment { length = 0 expr = chs(\"../outputFileType\") }
    }
    channel saveMetadata {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../saveMetadata\") }
    }
    channel saveMatricesTxtFiles {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../saveMatricesTxtFiles\") }
    }
    channel evCorrection {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../evCorrection\") }
    }
    channel reload {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../reload\") }
    }
    channel enablecustomenv {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../enablecustomenv\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_structure_from_motion1.parm"
Content-Type: text/plain

{
version 0.8
cook	[ 0	locks=0 ]	(	0	)
reload	[ 0	locks=0 ]	(	[ reload	0 ] 	)
manual_mode	[ 0	locks=0	autoscope=0 ]	(	[ manual_mode	1 ] 	)
bExportLog	[ 0	locks=0	autoscope=0 ]	(	[ bExportLog	0 ] 	)
folder0	[ 0	locks=0 ]	(	0	0	)
dsc_type	[ 0	locks=0	autoscope=0 ]	(	[ dsc_type	sift ] 	)
lock	[ 0	locks=0	autoscope=0 ]	(	[ lock	0 ] 	)
local	[ 0	locks=0	autoscope=0 ]	(	[ local	1 ] 	)
maxN	[ 0	locks=0	autoscope=0 ]	(	[ maxN	0 ] 	)
minNumberOfMatches	[ 0	locks=0	autoscope=0 ]	(	[ minNumberOfMatches	0 ] 	)
minInput	[ 0	locks=0	autoscope=0 ]	(	[ minInput	2 ] 	)
lockAllIntrinsics	[ 0	locks=0	autoscope=0 ]	(	[ lockAllIntrinsics	0 ] 	)
filterTrackForks	[ 0	locks=0	autoscope=0 ]	(	[ filterTrackForks	0 ] 	)
folder1	[ 0	locks=0 ]	(	0	)
locl_es	[ 0	locks=0	autoscope=0 ]	(	[ locl_es	acransac ] 	)
localizerEstimatorMaxIterations	[ 0	locks=0	autoscope=0 ]	(	[ localizerEstimatorMaxIterations	4096 ] 	)
localizerEstimatorError	[ 0	locks=0	autoscope=0 ]	(	[ localizerEstimatorError	0 ] 	)
ba	[ 0	locks=0	autoscope=0 ]	(	[ ba	1 ] 	)
minTri	[ 0	locks=0	autoscope=0 ]	(	[ minTri	2 ] 	)
minAngle	[ 0	locks=0	autoscope=0 ]	(	[ minAngle	3 ] 	)
minLandmark	[ 0	locks=0	autoscope=0 ]	(	[ minLandmark	2 ] 	)
maxReprEr	[ 0	locks=0	autoscope=0 ]	(	[ maxReprEr	4 ] 	)
maxAngInit	[ 0	locks=0	autoscope=0 ]	(	[ maxAngInit	40 ] 	)
minAngInit	[ 0	locks=0	autoscope=0 ]	(	[ minAngInit	5 ] 	)
useInputMatches	[ 0	locks=0	autoscope=0 ]	(	[ useInputMatches	1 ] 	)
useRigConstraint	[ 0	locks=0	autoscope=0 ]	(	[ useRigConstraint	1 ] 	)
fileExt	[ 0	locks=0	autoscope=0 ]	(	[ fileExt	.abc ] 	)
folder2	[ 0	locks=0 ]	(	0	)
outputFileType	[ 0	locks=0	autoscope=0 ]	(	[ outputFileType	exr ] 	)
saveMetadata	[ 0	locks=0	autoscope=0 ]	(	[ saveMetadata	1 ] 	)
saveMatricesTxtFiles	[ 0	locks=0	autoscope=0 ]	(	[ saveMatricesTxtFiles	0 ] 	)
evCorrection	[ 0	locks=0	autoscope=0 ]	(	[ evCorrection	0 ] 	)
folder3	[ 0	locks=0 ]	(	1	)
enablecustomenv	[ 8	locks=0 ]	(	[ enablecustomenv	1 ] 	)
customenv	[ 0	locks=0 ]	(	`chs(\"../customenv\")`	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_structure_from_motion1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_meshing1.init"
Content-Type: text/plain

type = labs::av_meshing::4.0
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_meshing1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0 1.2176
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
0 "output1"
1 "output2"
}
inputsNamed3
{
2 	av_depth_map1 0 1 "input1"
}
inputs
{
0 	av_depth_map1 0 1
}
stat
{
  create -1
  modify -1
  author prisms@threadripper1
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_meshing1.chn"
Content-Type: text/plain

{
    channel manual_mode {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../manual_mode\") }
    }
    channel bExportLog {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../bExportLog\") }
    }
    channel estimateSpaceMinObservationAngle {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../estimateSpaceMinObservationAngle\") }
    }
    channel maxInpt {
      lefttype = extend
      righttype = extend
      default = 50000000
      flags = 0
      segment { length = 0 value = 50000000 50000000 expr = ch(\"../maxInpt\") }
    }
    channel maxPts {
      lefttype = extend
      righttype = extend
      default = 5000000
      flags = 0
      segment { length = 0 value = 5000000 5000000 expr = ch(\"../maxPts\") }
    }
    channel colorizeOutput {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../colorizeOutput\") }
    }
    channel estimateSpaceFromSfM {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../estimateSpaceFromSfM\") }
    }
    channel estimateSpaceMinObservations {
      lefttype = extend
      righttype = extend
      default = 3
      flags = 0
      segment { length = 0 value = 3 3 expr = ch(\"../estimateSpaceMinObservations\") }
    }
    channel maxPtsVox {
      lefttype = extend
      righttype = extend
      default = 1000000
      flags = 0
      segment { length = 0 value = 1000000 1000000 expr = ch(\"../maxPtsVox\") }
    }
    channel minStep {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../minStep\") }
    }
    channel part {
      lefttype = extend
      righttype = extend
      defaultString = \"singleBlock\"
      flags = 0
      segment { length = 0 expr = chs(\"../part\") }
    }
    channel rePart {
      lefttype = extend
      righttype = extend
      defaultString = \"multiResolution\"
      flags = 0
      segment { length = 0 expr = chs(\"../rePart\") }
    }
    channel angle {
      lefttype = extend
      righttype = extend
      default = 15
      flags = 0
      segment { length = 0 value = 15 15 expr = ch(\"../angle\") }
    }
    channel sim {
      lefttype = extend
      righttype = extend
      default = 15
      flags = 0
      segment { length = 0 value = 15 15 expr = ch(\"../sim\") }
    }
    channel pixInit {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../pixInit\") }
    }
    channel pixFinal {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../pixFinal\") }
    }
    channel vote {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../vote\") }
    }
    channel contrib {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../contrib\") }
    }
    channel simGaussInit {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../simGaussInit\") }
    }
    channel simGaussSize {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../simGaussSize\") }
    }
    channel minThresh {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../minThresh\") }
    }
    channel rFuse {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../rFuse\") }
    }
    channel addLandmarksToTheDensePointCloud {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../addLandmarksToTheDensePointCloud\") }
    }
    channel seed {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../seed\") }
    }
    channel forceTEdgeDelta {
      lefttype = extend
      righttype = extend
      default = 0.10000000000000001
      flags = 0
      segment { length = 0 value = 0.10000000000000001 0.10000000000000001 expr = ch(\"../forceTEdgeDelta\") }
    }
    channel universePercentile {
      lefttype = extend
      righttype = extend
      default = 0.999
      flags = 0
      segment { length = 0 value = 0.999 0.999 expr = ch(\"../universePercentile\") }
    }
    channel filterTri {
      lefttype = extend
      righttype = extend
      default = 60
      flags = 0
      segment { length = 0 value = 60 60 expr = ch(\"../filterTri\") }
    }
    channel keepLrg {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../keepLrg\") }
    }
    channel numIter {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../numIter\") }
    }
    channel lambda {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../lambda\") }
    }
    channel reload {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../reload2\") }
    }
    channel enablecustomenv {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../enablecustomenv\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_meshing1.parm"
Content-Type: text/plain

{
version 0.8
cook	[ 0	locks=0 ]	(	0	)
reload	[ 0	locks=0 ]	(	[ reload	0 ] 	)
manual_mode	[ 0	locks=0	autoscope=0 ]	(	[ manual_mode	1 ] 	)
bExportLog	[ 0	locks=0	autoscope=0 ]	(	[ bExportLog	0 ] 	)
folder0	[ 0	locks=0 ]	(	0	0	)
estimateSpaceMinObservationAngle	[ 0	locks=0	autoscope=0 ]	(	[ estimateSpaceMinObservationAngle	10 ] 	)
maxInpt	[ 0	locks=0	autoscope=0 ]	(	[ maxInpt	50000000 ] 	)
maxPts	[ 0	locks=0	autoscope=0 ]	(	[ maxPts	5000000 ] 	)
colorizeOutput	[ 0	locks=0	autoscope=0 ]	(	[ colorizeOutput	1 ] 	)
folder1	[ 0	locks=0	autoscope=0 ]	(	1	)
estimateSpaceFromSfM	[ 0	locks=0	autoscope=0 ]	(	[ estimateSpaceFromSfM	1 ] 	)
estimateSpaceMinObservations	[ 0	locks=0	autoscope=0 ]	(	[ estimateSpaceMinObservations	3 ] 	)
maxPtsVox	[ 0	locks=0	autoscope=0 ]	(	[ maxPtsVox	1000000 ] 	)
minStep	[ 0	locks=0	autoscope=0 ]	(	[ minStep	2 ] 	)
part	[ 0	locks=0	autoscope=0 ]	(	[ part	singleBlock ] 	)
rePart	[ 0	locks=0	autoscope=0 ]	(	[ rePart	multiResolution ] 	)
angle	[ 0	locks=0	autoscope=0 ]	(	[ angle	15 ] 	)
sim	[ 0	locks=0	autoscope=0 ]	(	[ sim	15 ] 	)
pixInit	[ 0	locks=0	autoscope=0 ]	(	[ pixInit	2 ] 	)
pixFinal	[ 0	locks=0	autoscope=0 ]	(	[ pixFinal	4 ] 	)
vote	[ 0	locks=0	autoscope=0 ]	(	[ vote	4 ] 	)
contrib	[ 0	locks=0	autoscope=0 ]	(	[ contrib	2 ] 	)
simGaussInit	[ 0	locks=0	autoscope=0 ]	(	[ simGaussInit	10 ] 	)
simGaussSize	[ 0	locks=0	autoscope=0 ]	(	[ simGaussSize	10 ] 	)
minThresh	[ 0	locks=0	autoscope=0 ]	(	[ minThresh	1 ] 	)
rFuse	[ 0	locks=0	autoscope=0 ]	(	[ rFuse	1 ] 	)
addLandmarksToTheDensePointCloud	[ 0	locks=0	autoscope=0 ]	(	[ addLandmarksToTheDensePointCloud	0 ] 	)
seed	[ 0	locks=0	autoscope=0 ]	(	[ seed	1 ] 	)
forceTEdgeDelta	[ 0	locks=0	autoscope=0 ]	(	[ forceTEdgeDelta	0.10000000000000001 ] 	)
universePercentile	[ 0	locks=0	autoscope=0 ]	(	[ universePercentile	0.999 ] 	)
saveRawDensePointCloud	[ 0	locks=0 ]	(	"on"	)
filterTri	[ 0	locks=0	autoscope=0 ]	(	[ filterTri	60 ] 	)
keepLrg	[ 0	locks=0	autoscope=0 ]	(	[ keepLrg	1 ] 	)
numIter	[ 0	locks=0	autoscope=0 ]	(	[ numIter	5 ] 	)
folder2	[ 0	locks=0	autoscope=0 ]	(	1	)
lambda	[ 0	locks=0	autoscope=0 ]	(	[ lambda	1 ] 	)
folder3	[ 0	locks=0 ]	(	1	)
enablecustomenv	[ 8	locks=0 ]	(	[ enablecustomenv	1 ] 	)
customenv	[ 0	locks=0 ]	(	`chs(\"../customenv\")`	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_meshing1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	},
	"___toolcount___":{
		"type":"string",
		"value":"15"
	},
	"___toolid___":{
		"type":"string",
		"value":"object_spotlight"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/color1.init"
Content-Type: text/plain

type = color
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/color1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -2.72755 0.311331
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	av_meshing1 0 1 "input1"
}
inputs
{
0 	av_meshing1 0 1
}
stat
{
  create -1
  modify -1
  author prisms@threadripper1
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/color1.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
deleteallcolorattribs	[ 0	locks=0 ]	(	"on"	)
class	[ 0	locks=0 ]	(	2	)
colortype	[ 0	locks=0 ]	(	0	)
color	[ 0	locks=0 ]	(	1	1	1	)
seed	[ 0	locks=0 ]	(	0	)
rampattribute	[ 0	locks=0 ]	(	""	)
ramprange	[ 0	locks=0 ]	(	0	1	)
ramp	[ 0	locks=0 ]	(	2	)
ramp1pos	[ 0	locks=0 ]	(	0	)
ramp1c	[ 0	locks=0 ]	(	0	0	0	)
ramp1interp	[ 0	locks=0 ]	(	"linear"	)
ramp2pos	[ 0	locks=0 ]	(	1	)
ramp2c	[ 0	locks=0 ]	(	1	1	1	)
ramp2interp	[ 0	locks=0 ]	(	"linear"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/color1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	},
	"___toolcount___":{
		"type":"string",
		"value":"2"
	},
	"___toolid___":{
		"type":"string",
		"value":"sop_color"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_texturing1/mesh_materials/matnet.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_texturing1/mesh_materials/materialassignment.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -1.11759e-08 4.9334
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create -1
  modify -1
  author paula@DESKTOP-5213MPP
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_texturing1/mesh_materials/materialassignment.parm"
Content-Type: text/plain

{
version 0.8
style	[ 0	locks=0 ]	(	primitive	)
uselabels	[ 0	locks=0 ]	(	"uselabels"	)
createstylesheets	[ 0	locks=0 ]	(	"off"	)
fullpath	[ 0	locks=0 ]	(	"on"	)
num_materials	[ 8	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_texturing1/mesh_materials/materialassignment.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_initialize1.init"
Content-Type: text/plain

type = labs::av_initialize::4.0
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_initialize1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0 5.2176
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author prisms@threadripper1
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_initialize1.multiparm"
Content-Type: text/plain

1
filename__# ../filename__#

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_initialize1.chn"
Content-Type: text/plain

{
    channel manual_mode {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../manual_mode\") }
    }
    channel bExportLog {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../bExportLog\") }
    }
    channel proj {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = chs(\"../proj\") }
    }
    channel cache_dir {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = chs(\"../cache_dir\") }
    }
    channel alice_dir {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = chs(\"../alice_dir\") }
    }
    channel src_img {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../src_img\") }
    }
    channel dof {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 45 45 expr = ch(\"../dof\") }
    }
    channel enablecustomenv {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../enablecustomenv\") }
    }
    channel filename__1 {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../filename__1\") }
    }
    channel filename__2 {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../filename__2\") }
    }
    channel filename__3 {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../filename__3\") }
    }
    channel filename__4 {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../filename__4\") }
    }
    channel filename__5 {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../filename__5\") }
    }
    channel filename__6 {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../filename__6\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_initialize1.parm"
Content-Type: text/plain

{
version 0.8
cook	[ 0	locks=0 ]	(	0	)
manual_mode	[ 0	locks=0	autoscope=0 ]	(	[ manual_mode	1 ] 	)
bExportLog	[ 0	locks=0	autoscope=0 ]	(	[ bExportLog	0 ] 	)
proj	[ 0	locks=0	autoscope=0 ]	(	[ proj	alicevision_demoscene ] 	)
cache_dir	[ 0	locks=0	autoscope=0 ]	(	[ cache_dir	F:/SideFX/SideFXLabs/hip/AV_Cache/ ] 	)
alice_dir	[ 0	locks=0	autoscope=0 ]	(	[ alice_dir	"" ] 	)
folder1	[ 0	locks=0 ]	(	1	)
enablecustomenv	[ 8	locks=0 ]	(	[ enablecustomenv	1 ] 	)
customenv	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	`chs(\"../customenv\")`	)
folder0	[ 0	locks=0	autoscope=0 ]	(	1	1	)
add_img	[ 0	locks=0 ]	(	0	)
src_img	[ 0	locks=0	autoscope=0 ]	(	[ src_img	6 ] 	)
dof	[ 0	locks=0	autoscope=0 ]	(	[ dof	45 ] 	)
filename__1	[ 0	locks=0 ]	(	[ filename__1	F:/SideFX/SideFXLabs/hip/tex/AliceVision/IMG_9371.jpg ] 	)
filename__2	[ 0	locks=0 ]	(	[ filename__2	F:/SideFX/SideFXLabs/hip/tex/AliceVision/IMG_9370.jpg ] 	)
filename__3	[ 0	locks=0 ]	(	[ filename__3	F:/SideFX/SideFXLabs/hip/tex/AliceVision/IMG_9369.jpg ] 	)
filename__4	[ 0	locks=0 ]	(	[ filename__4	F:/SideFX/SideFXLabs/hip/tex/AliceVision/IMG_9368.jpg ] 	)
filename__5	[ 0	locks=0 ]	(	[ filename__5	F:/SideFX/SideFXLabs/hip/tex/AliceVision/IMG_9367.jpg ] 	)
filename__6	[ 0	locks=0 ]	(	[ filename__6	F:/SideFX/SideFXLabs/hip/tex/AliceVision/IMG_9366.jpg ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_initialize1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_analyze_images1.init"
Content-Type: text/plain

type = labs::av_analyze_images::4.0
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_analyze_images1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0 4.10617
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	av_initialize1 0 1 "input1"
}
inputs
{
0 	av_initialize1 0 1
}
stat
{
  create -1
  modify -1
  author prisms@threadripper1
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_analyze_images1.chn"
Content-Type: text/plain

{
    channel manual_mode {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../manual_mode\") }
    }
    channel bExportLog {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../bExportLog\") }
    }
    channel dsc_type {
      lefttype = extend
      righttype = extend
      defaultString = \"sift\"
      flags = 0
      segment { length = 0 expr = chs(\"../dsc_type\") }
    }
    channel dsc_pre {
      lefttype = extend
      righttype = extend
      defaultString = \"normal\"
      flags = 0
      segment { length = 0 expr = chs(\"../dsc_pre\") }
    }
    channel cpu {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../cpu\") }
    }
    channel maxThreads {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../maxThreads\") }
    }
    channel minNImg {
      lefttype = extend
      righttype = extend
      default = 200
      flags = 0
      segment { length = 0 value = 200 200 expr = ch(\"../minNImg\") }
    }
    channel max_desc {
      lefttype = extend
      righttype = extend
      default = 500
      flags = 0
      segment { length = 0 value = 500 500 expr = ch(\"../max_desc\") }
    }
    channel nMatch {
      lefttype = extend
      righttype = extend
      default = 50
      flags = 0
      segment { length = 0 value = 50 50 expr = ch(\"../nMatch\") }
    }
    channel nbNeighbors {
      lefttype = extend
      righttype = extend
      default = 50
      flags = 0
      segment { length = 0 value = 50 50 expr = ch(\"../nbNeighbors\") }
    }
    channel dsc_type2 {
      lefttype = extend
      righttype = extend
      defaultString = \"sift\"
      flags = 0
      segment { length = 0 expr = chs(\"../dsc_type2\") }
    }
    channel guide {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../guide\") }
    }
    channel photo {
      lefttype = extend
      righttype = extend
      defaultString = \"ANN_L2\"
      flags = 0
      segment { length = 0 expr = chs(\"../photo\") }
    }
    channel geoEst {
      lefttype = extend
      righttype = extend
      defaultString = \"acransac\"
      flags = 0
      segment { length = 0 expr = chs(\"../geoEst\") }
    }
    channel geoFilter {
      lefttype = extend
      righttype = extend
      defaultString = \"fundamental_matrix\"
      flags = 0
      segment { length = 0 expr = chs(\"../geoFilter\") }
    }
    channel dist {
      lefttype = extend
      righttype = extend
      default = 0.80000000000000004
      flags = 0
      segment { length = 0 value = 0.80000000000000004 0.80000000000000004 expr = ch(\"../dist\") }
    }
    channel maxIter {
      lefttype = extend
      righttype = extend
      default = 2048
      flags = 0
      segment { length = 0 value = 2048 2048 expr = ch(\"../maxIter\") }
    }
    channel geometricError {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../geometricError\") }
    }
    channel knownPosesGeometricErrorMax {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../knownPosesGeometricErrorMax\") }
    }
    channel maxMatch {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../maxMatch\") }
    }
    channel savePut {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../savePut\") }
    }
    channel matchFilePerImage {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../matchFilePerImage\") }
    }
    channel useGridSort {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../useGridSort\") }
    }
    channel expDebug {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../expDebug\") }
    }
    channel enablecustomenv {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../enablecustomenv\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_analyze_images1.parm"
Content-Type: text/plain

{
version 0.8
cook	[ 0	locks=0 ]	(	0	)
manual_mode	[ 0	locks=0	autoscope=0 ]	(	[ manual_mode	1 ] 	)
bExportLog	[ 0	locks=0	autoscope=0 ]	(	[ bExportLog	0 ] 	)
folder0	[ 0	locks=0	autoscope=0 ]	(	2	2	2	)
dsc_type	[ 0	locks=0	autoscope=0 ]	(	[ dsc_type	sift ] 	)
dsc_pre	[ 0	locks=0	autoscope=0 ]	(	[ dsc_pre	normal ] 	)
folder2	[ 0	locks=0 ]	(	0	)
cpu	[ 0	locks=0	autoscope=0 ]	(	[ cpu	1 ] 	)
maxThreads	[ 0	locks=0	autoscope=0 ]	(	[ maxThreads	0 ] 	)
folder3	[ 0	locks=0 ]	(	0	)
minNImg	[ 0	locks=0	autoscope=0 ]	(	[ minNImg	200 ] 	)
max_desc	[ 0	locks=0	autoscope=0 ]	(	[ max_desc	500 ] 	)
nMatch	[ 0	locks=0	autoscope=0 ]	(	[ nMatch	50 ] 	)
nbNeighbors	[ 0	locks=0	autoscope=0 ]	(	[ nbNeighbors	50 ] 	)
dsc_type2	[ 0	locks=0	autoscope=0 ]	(	[ dsc_type2	sift ] 	)
guide	[ 0	locks=0	autoscope=0 ]	(	[ guide	0 ] 	)
folder1	[ 0	locks=0	autoscope=0 ]	(	1	)
photo	[ 0	locks=0	autoscope=0 ]	(	[ photo	ANN_L2 ] 	)
geoEst	[ 0	locks=0	autoscope=0 ]	(	[ geoEst	acransac ] 	)
geoFilter	[ 0	locks=0	autoscope=0 ]	(	[ geoFilter	fundamental_matrix ] 	)
dist	[ 0	locks=0	autoscope=0 ]	(	[ dist	0.80000000000000004 ] 	)
maxIter	[ 0	locks=0	autoscope=0 ]	(	[ maxIter	2048 ] 	)
geometricError	[ 8	locks=0	autoscope=0 ]	(	[ geometricError	0 ] 	)
knownPosesGeometricErrorMax	[ 0	locks=0	autoscope=0 ]	(	[ knownPosesGeometricErrorMax	4 ] 	)
maxMatch	[ 0	locks=0	autoscope=0 ]	(	[ maxMatch	0 ] 	)
savePut	[ 0	locks=0	autoscope=0 ]	(	[ savePut	0 ] 	)
matchFilePerImage	[ 0	locks=0	autoscope=0 ]	(	[ matchFilePerImage	0 ] 	)
useGridSort	[ 0	locks=0	autoscope=0 ]	(	[ useGridSort	1 ] 	)
expDebug	[ 0	locks=0	autoscope=0 ]	(	[ expDebug	0 ] 	)
folder4	[ 0	locks=0 ]	(	1	)
enablecustomenv	[ 8	locks=0 ]	(	[ enablecustomenv	1 ] 	)
customenv	[ 0	locks=0 ]	(	`chs(\"../customenv\")`	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_analyze_images1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_depth_map1.init"
Content-Type: text/plain

type = labs::av_depth_map::4.0
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_depth_map1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0 2.2176
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	av_structure_from_motion1 0 1 "input1"
}
inputs
{
0 	av_structure_from_motion1 0 1
}
stat
{
  create -1
  modify -1
  author prisms@threadripper1
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_depth_map1.chn"
Content-Type: text/plain

{
    channel manual_mode {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../manual_mode\") }
    }
    channel bExportLog {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../bExportLog\") }
    }
    channel down {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../down\") }
    }
    channel minViewAngle {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../minViewAngle\") }
    }
    channel maxViewAngle {
      lefttype = extend
      righttype = extend
      default = 70
      flags = 0
      segment { length = 0 value = 70 70 expr = ch(\"../maxViewAngle\") }
    }
    channel sNumCam {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../sNumCam\") }
    }
    channel sWSH {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../sWSH\") }
    }
    channel sGamC {
      lefttype = extend
      righttype = extend
      default = 5.5
      flags = 0
      segment { length = 0 value = 5.5 5.5 expr = ch(\"../sGamC\") }
    }
    channel sGamP {
      lefttype = extend
      righttype = extend
      default = 5.5
      flags = 0
      segment { length = 0 value = 5.5 5.5 expr = ch(\"../sGamP\") }
    }
    channel rNumCam {
      lefttype = extend
      righttype = extend
      default = 3
      flags = 0
      segment { length = 0 value = 3 3 expr = ch(\"../rNumCam\") }
    }
    channel rNumSamp {
      lefttype = extend
      righttype = extend
      default = 150
      flags = 0
      segment { length = 0 value = 150 150 expr = ch(\"../rNumSamp\") }
    }
    channel rNumDepth {
      lefttype = extend
      righttype = extend
      default = 30
      flags = 0
      segment { length = 0 value = 30 30 expr = ch(\"../rNumDepth\") }
    }
    channel rNumIter {
      lefttype = extend
      righttype = extend
      default = 100
      flags = 0
      segment { length = 0 value = 100 100 expr = ch(\"../rNumIter\") }
    }
    channel rWSH {
      lefttype = extend
      righttype = extend
      default = 3
      flags = 0
      segment { length = 0 value = 3 3 expr = ch(\"../rWSH\") }
    }
    channel rSigma {
      lefttype = extend
      righttype = extend
      default = 15
      flags = 0
      segment { length = 0 value = 15 15 expr = ch(\"../rSigma\") }
    }
    channel rGamC {
      lefttype = extend
      righttype = extend
      default = 15.5
      flags = 0
      segment { length = 0 value = 15.5 15.5 expr = ch(\"../rGamC\") }
    }
    channel rGamP {
      lefttype = extend
      righttype = extend
      default = 8
      flags = 0
      segment { length = 0 value = 8 8 expr = ch(\"../rGamP\") }
    }
    channel rTcRc {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../rTcRc\") }
    }
    channel exportIntermediateResults {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../exportIntermediateResults\") }
    }
    channel nbGPUs {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../nbGPUs\") }
    }
    channel minCon {
      lefttype = extend
      righttype = extend
      default = 3
      flags = 0
      segment { length = 0 value = 3 3 expr = ch(\"../minCon\") }
    }
    channel minConBad {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../minConBad\") }
    }
    channel minViewAngle2 {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../minViewAngle2\") }
    }
    channel maxViewAngle2 {
      lefttype = extend
      righttype = extend
      default = 70
      flags = 0
      segment { length = 0 value = 70 70 expr = ch(\"../maxViewAngle2\") }
    }
    channel numCam {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../numCam\") }
    }
    channel filter {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../filter\") }
    }
    channel filterBad {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../filterBad\") }
    }
    channel computeNormalMaps {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../computeNormalMaps\") }
    }
    channel enablecustomenv {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../enablecustomenv\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_depth_map1.parm"
Content-Type: text/plain

{
version 0.8
cook	[ 0	locks=0 ]	(	0	)
manual_mode	[ 0	locks=0	autoscope=0 ]	(	[ manual_mode	1 ] 	)
bExportLog	[ 0	locks=0	autoscope=0 ]	(	[ bExportLog	0 ] 	)
folder0	[ 0	locks=0 ]	(	0	0	)
down	[ 0	locks=0	autoscope=0 ]	(	[ down	2 ] 	)
folder1	[ 0	locks=0	autoscope=0 ]	(	1	)
minViewAngle	[ 0	locks=0	autoscope=0 ]	(	[ minViewAngle	2 ] 	)
maxViewAngle	[ 0	locks=0	autoscope=0 ]	(	[ maxViewAngle	70 ] 	)
sNumCam	[ 0	locks=0	autoscope=0 ]	(	[ sNumCam	10 ] 	)
sWSH	[ 0	locks=0	autoscope=0 ]	(	[ sWSH	4 ] 	)
sGamC	[ 0	locks=0	autoscope=0 ]	(	[ sGamC	5.5 ] 	)
sGamP	[ 0	locks=0	autoscope=0 ]	(	[ sGamP	5.5 ] 	)
rNumCam	[ 0	locks=0	autoscope=0 ]	(	[ rNumCam	3 ] 	)
rNumSamp	[ 0	locks=0	autoscope=0 ]	(	[ rNumSamp	150 ] 	)
rNumDepth	[ 0	locks=0	autoscope=0 ]	(	[ rNumDepth	30 ] 	)
rNumIter	[ 0	locks=0	autoscope=0 ]	(	[ rNumIter	100 ] 	)
rWSH	[ 0	locks=0	autoscope=0 ]	(	[ rWSH	3 ] 	)
rSigma	[ 0	locks=0	autoscope=0 ]	(	[ rSigma	15 ] 	)
rGamC	[ 0	locks=0	autoscope=0 ]	(	[ rGamC	15.5 ] 	)
rGamP	[ 0	locks=0	autoscope=0 ]	(	[ rGamP	8 ] 	)
rTcRc	[ 0	locks=0	autoscope=0 ]	(	[ rTcRc	0 ] 	)
exportIntermediateResults	[ 0	locks=0	autoscope=0 ]	(	[ exportIntermediateResults	0 ] 	)
nbGPUs	[ 0	locks=0	autoscope=0 ]	(	[ nbGPUs	0 ] 	)
minCon	[ 0	locks=0	autoscope=0 ]	(	[ minCon	3 ] 	)
minConBad	[ 0	locks=0	autoscope=0 ]	(	[ minConBad	4 ] 	)
folder2	[ 0	locks=0	autoscope=0 ]	(	1	)
minViewAngle2	[ 0	locks=0	autoscope=0 ]	(	[ minViewAngle2	2 ] 	)
maxViewAngle2	[ 0	locks=0	autoscope=0 ]	(	[ maxViewAngle2	70 ] 	)
numCam	[ 0	locks=0	autoscope=0 ]	(	[ numCam	10 ] 	)
filter	[ 0	locks=0	autoscope=0 ]	(	[ filter	0 ] 	)
filterBad	[ 0	locks=0	autoscope=0 ]	(	[ filterBad	0 ] 	)
computeNormalMaps	[ 0	locks=0	autoscope=0 ]	(	[ computeNormalMaps	0 ] 	)
folder3	[ 0	locks=0 ]	(	1	)
enablecustomenv	[ 8	locks=0 ]	(	[ enablecustomenv	1 ] 	)
customenv	[ 0	locks=0 ]	(	`chs(\"../customenv\")`	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/av_depth_map1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	},
	"___toolcount___":{
		"type":"string",
		"value":"14"
	},
	"___toolid___":{
		"type":"string",
		"value":"object_spotlight"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output1.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.3541 -0.7824
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	av_meshing1 1 1 "input1"
}
inputs
{
0 	av_meshing1 1 1
}
stat
{
  create -1
  modify -1
  author Paul_Ambrosiussen@DESKTOP-A0373M3
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output1.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	1	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output2.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output2.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -2.46753e-16 -2.96606
connectornextid 1
flags =  lock off model off template on footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	switch1 2 1 "input1"
}
inputs
{
0 	switch1 0 1
}
stat
{
  create -1
  modify -1
  author Paul_Ambrosiussen@DESKTOP-A0373M3
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output2.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 6.95101 -0.7824
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	av_structure_from_motion1 1 1 "input1"
}
inputs
{
0 	av_structure_from_motion1 1 1
}
stat
{
  create -1
  modify -1
  author paula@DESKTOP-5213MPP
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	2	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -9.31323e-09 -1.93699
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
1 	av_texturing1 0 1 "input1"
0 	av_meshing1 0 1 "input2"
}
inputs
{
0 	av_texturing1 0 1
1 	av_meshing1 0 1
}
stat
{
  create -1
  modify -1
  author paula@DESKTOP-5213MPP
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mColorMode\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.order"
Content-Type: text/plain

11
av_texturing1
av_structure_from_motion1
av_meshing1
av_initialize1
av_analyze_images1
av_depth_map1
output1
output2
output0
switch1
color1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY--
